! VARIABLES ATRC FILE
!
!   About:
!       On Windows you can see these by typing SET.
!       On Linux you can see these by typing printenv.
!
!       When turning from Windows to Linux using --linux,
!       the converted path will be used. This only works
!       on absolute paths or if the path contains an 
!       environmental variable. 
!       
!       If your script contains paths, it would be best to add 
!       them as a local variable so that you can convert them 
!       yourself better. Optionally you can use process flags:
!       (.\PROCESS_FLAGS.atrc) 
!
!       When using the --wsl flag, it will add /mnt/<drive>/
!       to the start of the path.
!   
!   Variables                               => About
!   %~                                      => Percent tilde, gets various information about a file. Please see https://en.wikibooks.org/wiki/Windows_Batch_Scripting#Percent_tilde
!   %~(d|p|n|x){arg}                        => Get Drive, Path, Name, eXtension of the file
!   %*                                      => All arguments given to the batch file
!   %0...9                                  => Argument given to the batch file. 0 is the batch file
!   
!   Environmental variables:
!   
!   Environmental variable                  => About
!   1. ALLUSERSPROFILE                      => Contains program data for all users
!   2. APPDATA                              => Contains program data for the current user
!   3. CommonProgramFiles                   => Contains commonly used components across 64-bit programs
!   4. CommonProgramFilesx86                => Contains commonly used components across 32-bit programs
!   5. CommonProgramW6432                   => No idea how this is different from %CommonProgramFiles%
!   6. COMPUTERNAME                         => Contains computer's name
!   7. ComSpec                              => Points to the command line interpreter
!   8. DriverData                           => Points to the location of drivers
!   9. HOMEDRIVE                            => Contains the letter that is connected to user's home directory
!   10. HOMEPATH                            => Contains path to current user's homefolder
!   11. LOCALAPPDATA                        => Points to AppData/Local
!   12. LOGONSERVER                         => No idea what this is... propably just \\%COMPUTERNAME%?
!   13. NUMBER_OF_PROCESSORS                => Displays number of processors
!   14. OneDrive                            => Points to current user's OneDrive folder
!   15. OneDriveConsumer                    => Points to current user's OneDrive folder
!   16. OS                                  => Shows the current operating system
!   17. Path                                => Contains search path for executables
!   18. PATHEXT                             => Contains file extensions that OS considers as executable
!
!   20. PROCESSOR_ARCHITECTURE              => Contains processors architecture
!   21. PROCESSOR_IDENTIFIER                => Processor's description
!   22. PROCESSOR_LEVEL                     => Contains modal number of the processor
!   23. PROCESSOR_REVISION                  => Contains revision number of the processor
!   24. ProgramData                         => Folder for applications to put their data into. C:\ProgramData
!   25. ProgramFiles                        => 64-bit ProgramFiles. C:\Program Files or C:\Program Files (x86)
!   26. ProgramFilesx86                     => 32-bit ProgramFiles. C:\Program Files (x86). Only available on a 64-bit OS
!   27. ProgramW6432                        => Same as %ProgramFiles%. Only available on a 64-bit OS
!   28. PROMPT                              => Contains the settings for the current command prompt interpreter.
!   29. PSModulePath                        => Points to %SystemRoot%\system32\WindowsPowerShell\v1.0\Modules\
!   30. PUBLIC                              => Points to C:\Users\public
!   
!   32. SystemDrive                         => Drive letter, where Windows root directory is located at
!   33. SystemRoot                          => Contains locations of Windows root directory
!   34. TEMP                                => Point to C:\Users\<user>\AppData\Local\Temp
!   35. TMP                                 => Point to C:\Users\<user>\AppData\Local\Temp
!   36. USERDOMAIN                          => Contains the name of the domain that contains the user's account
!   37. USERDOMAIN_ROAMINGPROFILE           => Contains the user domain for RDS or standard roaming profile paths
!   38. USERNAME                            => Contains current user's name
!   39. USERPROFILE                         => Contains the locaion of user's profile
!   
!   41. windir                              => Same as %SystemRoot%
!
!
!
!   45. ZES_ENABLE_SYSMAN                   => Enables driver initialization and dependencies for system management
!   46. TIME                                => Contains system's current time
!   47. RANDOM                              => Returns a random number between 0 and 32767
!   48. ERRORLEVEL                          => Contains the error code of the most recent command or program
!   49. DATE                                => Contains current system's data
!   50. CMDCMDLINE                          => Contains the exact command that was used when opening the current command line
!   51. CMDEXTVERSION                       => Contains the version of the Command Processor Extensions
!   52. CD                                  => Contains current working directory
!
! NOTE: Paths should not end in a slash (/)
! NOTE: Wrap in $() if you want to use a command as a part of the paths:
!       mkdir -p ./$(uname -s)/test => Will create a ./Linux/test folders
!
[VARIABLES]
ALLUSERSPROFILE=~/.config
APPDATA=~/.config
CommonProgramFiles=/usr
CommonProgramFilesx86=/usr
CommonProgramW6432=/usr
COMPUTERNAME=$NAME
ComSpec=$SHELL
DriverData=/lib/modules
! if path is, for example: "%APPDATA%\temp", and you are using
! --wsl, program will try to make a following path:
! /mnt/<HOMEDRIVE>/Users/$USER/AppData/Roaming/temp
! As you can see, it uses the same username as the wsl itself...
! will be an obvious problem if wsl and windows usernames are different
%home_drive_lower%=c
HOMEDRIVE=%home_drive_lower%
HOMEPATH=$HOME
LOCALAPPDATA=/usr/local
LOGONSERVER=
NUMBER_OF_PROCESSORS=$(nproc)
OneDrive=
OneDriveConsumer=
OS=$(uname -s)
Path=$PATH
PATHEXT=
POWERSHELL_DISTRIBUTION_CHANNEL=
PROCESSOR_ARCHITECTURE=$(uname -p)
PROCESSOR_IDENTIFIER=$(lscpu | grep "Model name")
! Don't know if these are the same thing, the number matched for me :)DDD
PROCESSOR_LEVEL=$(lscpu | grep "CPU family")
! Not sure what to put here...
PROCESSOR_REVISION=
ProgramData=~/.config
ProgramFiles=/usr
ProgramFilesx86=/usr
ProgramW6432=/usr
! Couldn't find anything equivalent
PROMPT=
PSModulePath=
! Not really equivalent to my knowledge, current user's home will be just used
PUBLIC=$HOME
! no idea what to put here...
SESSIONNAME=$STY
SystemDrive=%home_drive_lower%
SystemRoot=/
TEMP=/tmp
TMP=/tmp
! propably not technically the same?
USERDOMAIN=$(/usr/bin/domainname -a)
! propably not the same, but i have no idea what this is
USERDOMAIN_ROAMINGPROFILE=$(/usr/bin/domainname -a)
USERNAME=$USER
USERPROFILE=$HOME
windir=/
ZES_ENABLE_SYSMAN=
TIME=$(date +"\%T")
RANDOM=$RANDOM
ERRORLEVEL=$?
DATE=$(date +"\%D")
! Couldn't find any equivalent commands
CMDCMDLINE=
! zero idea what equivalent for this is, just going to stick with this one
CMDEXTVERSION=$SHELL --version
CD=$PWD

